// <auto-generated />
using System;
using Angular_GrahQL.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Angular_GrahQL.Migrations
{
    [DbContext(typeof(MyHotelDbContext))]
    partial class MyHotelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Angular_GrahQL.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(400)")
                        .HasMaxLength(400);

                    b.Property<string>("Patronimic")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Владимир",
                            RegisterDate = new DateTime(2019, 9, 28, 8, 16, 2, 88, DateTimeKind.Local).AddTicks(5662),
                            Surname = "Петров"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Александр",
                            RegisterDate = new DateTime(2019, 10, 3, 8, 16, 2, 91, DateTimeKind.Local).AddTicks(6972),
                            Surname = "Кононов"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Дафт",
                            RegisterDate = new DateTime(2019, 10, 7, 8, 16, 2, 91, DateTimeKind.Local).AddTicks(7090),
                            Surname = "Панков"
                        });
                });

            modelBuilder.Entity("Angular_GrahQL.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CheckinDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuestId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckinDate = new DateTime(2019, 10, 6, 8, 16, 2, 92, DateTimeKind.Local).AddTicks(663),
                            CheckoutDate = new DateTime(2019, 10, 11, 8, 16, 2, 92, DateTimeKind.Local).AddTicks(672),
                            GuestId = 1,
                            RoomId = 3
                        },
                        new
                        {
                            Id = 2,
                            CheckinDate = new DateTime(2019, 10, 7, 8, 16, 2, 92, DateTimeKind.Local).AddTicks(4082),
                            CheckoutDate = new DateTime(2019, 10, 12, 8, 16, 2, 92, DateTimeKind.Local).AddTicks(4091),
                            GuestId = 2,
                            RoomId = 4
                        });
                });

            modelBuilder.Entity("Angular_GrahQL.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("AllowedSmoking")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllowedSmoking = false,
                            Name = "желтая-Комната",
                            Number = 101,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            AllowedSmoking = false,
                            Name = "синяя-Комната",
                            Number = 102,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            AllowedSmoking = false,
                            Name = "белая-Комната",
                            Number = 103,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            AllowedSmoking = false,
                            Name = "черная-Комната",
                            Number = 104,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Angular_GrahQL.Entities.Reservation", b =>
                {
                    b.HasOne("Angular_GrahQL.Entities.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Angular_GrahQL.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
